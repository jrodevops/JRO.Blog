@using Microsoft.AspNet.Identity
@model JRO.Blog.ViewModels.PostFormViewModel
@{
    ViewBag.Title = "PostFormView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.ViewTitle</h2>

<div class="panel panel-primary">
    <div class="panel-heading panel-head">Add post</div>
    <div class="panel-body">
        @using (Html.BeginForm("Save", "Posts"))
        {
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-9">
                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AuthorId, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-9">
                        @Html.DropDownListFor(model => model.AuthorId, new SelectList(Model.Authors, "Id", "Fullname", @User.Identity.GetUserId()), new { @class = "form-control", @row = 5 })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Body, new { @class = "col-lg-1 control-label" })
                    <div class="col-lg-9">
                        @Html.TextAreaFor(model => model.Body, new { @class = "form-control", @id = "Content", @row = 5 })
                    </div>
                </div>
                @Html.HiddenFor(p=>p.Id)
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="col-lg-9"></div>
                    <div class="col-lg-3">
                        <button class="btn btn-success" id="btnSubmit" type="submit">
                            Submit
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts
{
    <script>
        $('#Content').summernote({
            height: 300, // set editor height
            minHeight: null, // set minimum height of editor
            maxHeight: null, // set maximum height of editor
            focus: true // set focus to editable area after initializing summernote
        });
    </script>    
}